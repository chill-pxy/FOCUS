#version 450

layout(binding = 0) uniform VertexUniformBufferObject 
{
    mat4 model;
    mat4 view;
    mat4 proj;
    
    vec3 viewPosition;
    
    vec3 pointLightPosition;
    vec3 pointLightColor;
    float pointLightStrength;

    vec3 dirLightDirection;
} vubo;

layout(location = 0) in vec3 inPosition;
layout(location = 1) in vec3 inColor;
layout(location = 2) in vec2 inTexCoord;
layout(location = 3) in vec3 inNormal;

layout(location = 0) out vec3 fragColor;
layout(location = 1) out vec2 fragTexCoord;
layout(location = 2) out vec3 fragPosition;
layout(location = 3) out vec3 fragNormal;

layout(location = 4) out vec3 fragViewPosition;

layout(location = 5) out vec3 fragPointLightPosition;
layout(location = 6) out vec3 fragPointLightColor;
layout(location = 7) out float fragPointLightStrength;

layout(location = 8) out vec3 fragDirLightDirection;

void main() 
{
    gl_Position = vubo.proj * vubo.view * vubo.model * vec4(inPosition, 1.0);
    
    fragColor    = inColor;
    fragTexCoord = inTexCoord;
    fragPosition = inPosition;
    fragNormal   = inNormal;

    fragViewPosition = vubo.viewPosition;

    fragPointLightPosition = vubo.pointLightPosition;
    fragPointLightColor = vubo.pointLightColor;
    fragPointLightStrength = vubo.pointLightStrength;

    fragDirLightDirection = vubo.dirLightDirection;
}